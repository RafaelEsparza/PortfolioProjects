SELECT *
FROM `flowing-encoder-387117.COVID.Covid_Vaccinations` 
order by 3, 4;

-- Looking at Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract Covid

SELECT location, date, total_cases,total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM `flowing-encoder-387117.COVID.Covid_Deaths` 
order by 1, 2;

-- Looking at Total Cases vs Population
-- Shows what percentage of population got Covid 

SELECT location, date, population, total_cases, (total_cases
/population)*100 as CovidInfectedPercentage
FROM `flowing-encoder-387117.COVID.Covid_Deaths` 
where location = 'United States'
order by 1, 2;

SELECT location, population, max(total_cases) as HighestInfectionCount, max((total_cases
/population))*100 as CovidInfectedPercentage
FROM `flowing-encoder-387117.COVID.Covid_Deaths` 
--where location = 'United States'
group by location, population
order by CovidInfectedPercentage desc;

-- Showing Countries with Highest Death Count per Population

SELECT location, max(cast(total_deaths as int)) as TotalDeathCount
FROM `flowing-encoder-387117.COVID.Covid_Deaths` 
where continent is not null 
group by location
order by TotalDeathCount desc;

-- Showing Continents & income classes with the Highest Death Count per Population

SELECT location, max(cast(total_deaths as int)) as TotalDeathCount
FROM `flowing-encoder-387117.COVID.Covid_Deaths` 
where continent is null 
group by location
order by TotalDeathCount desc;

-- World wide numbers

SELECT date, sum(new_cases) as TotalCases, sum(new_deaths) as TotalDeaths, sum(new_deaths)/sum(new_cases)*100 as DeathPercentage
FROM `flowing-encoder-387117.COVID.Covid_Deaths` 
where continent is null and new_deaths != 0
group by date
order by 1, 2;

SELECT  sum(new_cases) as TotalCases, sum(new_deaths) as TotalDeaths, sum(new_deaths)/sum(new_cases)*100 as DeathPercentage
FROM `flowing-encoder-387117.COVID.Covid_Deaths` 
where continent is null 
order by 1, 2;

-- Looking at Total Population vs Vaccinations

select dth.continent, dth.location, dth.date, dth.population, vac.new_vaccinations
FROM `flowing-encoder-387117.COVID.Covid_Deaths` dth
join `flowing-encoder-387117.COVID.Covid_Vaccinations` vac
  on dth.location = vac.location
  and dth.date = vac.date
where dth.continent is not null 
order by 2, 3; 

select dth.continent, dth.location, dth.date, dth.population, vac.new_vaccinations, sum(vac.new_vaccinations) over (partition by dth.location order by dth.location, dth.date) as RollingPeopleVacinated
FROM `flowing-encoder-387117.COVID.Covid_Deaths` dth
join `flowing-encoder-387117.COVID.Covid_Vaccinations` vac
  on dth.location = vac.location
  and dth.date = vac.date
where dth.continent is not null 
order by 2, 3; 

-- Using CTE
with popvsvac as(
select dth.continent, dth.location, dth.date, dth.population, vac.new_vaccinations, sum(vac.new_vaccinations) over (partition by dth.location order by dth.location, dth.date) as RollingPeopleVacinated
FROM `flowing-encoder-387117.COVID.Covid_Deaths` dth
join `flowing-encoder-387117.COVID.Covid_Vaccinations` vac
  on dth.location = vac.location
  and dth.date = vac.date
where dth.continent is not null 
)
select *, (RollingPeopleVacinated/population)*100 as RollingVacPercent
from popvsvac; 

-- Temp Table

create temp table PercentPopulationVaccinated
(
continent string,
location string,
date datetime,
population int64,
new_vaccinations int64,
RollingPeopleVacinated int64
);

insert into PercentPopulationVaccinated
select dth.continent, dth.location, dth.date, dth.population, vac.new_vaccinations, sum(vac.new_vaccinations) over (partition by dth.location order by dth.location, dth.date) as RollingPeopleVacinated
FROM `flowing-encoder-387117.COVID.Covid_Deaths` dth
join `flowing-encoder-387117.COVID.Covid_Vaccinations` vac
  on dth.location = vac.location
  and dth.date = vac.date
where dth.continent is not null;

select *, (RollingPeopleVacinated/population)*100 as RollingVacPercent
from PercentPopulationVaccinated
